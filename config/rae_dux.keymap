/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { flavor = "hold-preferred"; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        Tri {
            if-layers = <3 2>;
            then-layer = <4>;
        };
    };

    behaviors {
        hrm: home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <500>;
            bindings = <&kp>, <&kp>;
        };

        lt_repeat: lt_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_REPEAT";
            bindings = <&mo>, <&key_repeat>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Gamepad {
            bindings = <&tog 5>;
            key-positions = <28 8>;
        };

        qwerty {
            bindings = <&tog 1>;
            key-positions = <0 20>;
        };

        bl_r {
            bindings = <&bootloader>;
            key-positions = <9 29>;
            layers = <2>;
        };

        bl_l {
            bindings = <&bootloader>;
            key-positions = <20 0>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemakDH {
            bindings = <
&kp Q              &kp W         &kp F            &kp P        &kp B                              &kp J           &kp L        &kp U             &kp Y         &kp SEMI
&hrm LEFT_SHIFT A  &hrm LCTRL R  &hrm LEFT_ALT S  &hrm LGUI T  &kp G                              &kp M           &hrm LGUI N  &hrm RIGHT_ALT E  &hrm LCTRL I  &hrm RIGHT_SHIFT O
&kp Z              &kp X         &kp C            &kp D        &kp V                              &kp K           &kp H        &kp COMMA         &kp DOT       &kp SLASH
                                                  &kp ESC      &lt 3 SPACE  &kp TAB    &kp ENTER  &lt_repeat 2 0  &kp BSPC
            >;
        };

        qwerty {
            bindings = <
&kp Q              &kp W         &kp E            &kp R        &kp T                              &kp Y           &kp U        &kp I             &kp O         &kp P
&hrm LEFT_SHIFT A  &hrm LCTRL S  &hrm LEFT_ALT D  &hrm LGUI F  &kp G                              &kp H           &hrm LGUI J  &hrm RIGHT_ALT K  &hrm LCTRL L  &hrm RIGHT_SHIFT SEMICOLON
&kp Z              &kp X         &kp C            &kp V        &kp B                              &kp N           &kp M        &kp COMMA         &kp DOT       &kp SLASH
                                                  &kp ESC      &lt 3 SPACE  &kp TAB    &kp ENTER  &lt_repeat 2 0  &kp BSPC
            >;
        };

        Symbol {
            bindings = <
&none                        &kp SINGLE_QUOTE          &kp DOLLAR           &kp AMPERSAND         &kp CARET                        &kp LESS_THAN  &kp POUND        &kp LEFT_BRACKET                 &kp RIGHT_BRACKET             &kp GREATER_THAN
&hrm LEFT_SHIFT EXCLAMATION  &hrm LCTRL DOUBLE_QUOTES  &hrm LEFT_ALT MINUS  &hrm LGUI UNDERSCORE  &kp PLUS                         &kp PLUS       &hrm LGUI ASTRK  &hrm RIGHT_ALT LEFT_PARENTHESIS  &hrm LCTRL RIGHT_PARENTHESIS  &hrm RIGHT_SHIFT PERCENT
&none                        &kp GRAVE                 &kp PIPE             &kp EQUAL             &kp TILDE                        &kp BACKSLASH  &kp AT_SIGN      &kp LEFT_BRACE                   &kp RIGHT_BRACE               &none
                                                                            &kp ESC               &mo 3      &kp TAB    &kp ENTER  &none          &kp BACKSPACE
            >;

            label = "symbol_layer";
        };

        Numbers_Navigation {
            bindings = <
&kp SLASH           &kp N7               &kp N8            &kp N9              &kp ASTERISK                        &kp C_BRI_UP  &kp C_MUTE               &kp C_VOLUME_DOWN  &kp C_VOLUME_UP          &none
&hrm LEFT_SHIFT N0  &hrm LCTRL NUMBER_4  &hrm LEFT_ALT N5  &hrm LGUI NUMBER_6  &kp MINUS                           &none         &hrm RIGHT_COMMAND LEFT  &hrm RIGHT_ALT UP  &hrm RIGHT_CONTROL DOWN  &hrm RIGHT_SHIFT RIGHT
&kp EQUAL           &kp NUMBER_1         &kp NUMBER_2      &kp NUMBER_3        &kp PLUS                            &kp C_BRI_DN  &kp C_PREV               &kp C_PP           &kp C_NEXT               &none
                                                           &kp ESCAPE          &none         &kp TAB    &kp ENTER  &mo 2         &kp BSPC
            >;

            label = "numb_nav_layer";
        };

        Tri {
            bindings = <
&bootloader   &none  &none  &none  &none                  &none  &none               &none  &none  &bootloader
&bt BT_SEL 0  &none  &none  &none  &none                  &none  &kp LG(LS(LC(N4)))  &none  &none  &none
&bt BT_CLR    &none  &none  &none  &none                  &none  &none               &none  &none  &none
                            &none  &none  &none    &none  &none  &none
            >;

            label = "tri_layer";
        };

        gamepad {
            bindings = <
&kp ESC  &kp Q  &kp W  &kp E      &kp R                      &none  &kp L     &kp UP    &kp R      &none
&kp TAB  &kp A  &kp S  &kp D      &kp F                      &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none
&none    &kp Y  &kp X  &kp C      &none                      &none  &kp S     &none     &kp E      &none
                       &kp LSHFT  &kp SPACE  &none    &kp B  &kp A  &none
            >;
        };
    };
};
